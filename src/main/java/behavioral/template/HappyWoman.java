package behavioral.template;

public abstract class HappyWoman extends Happy {

    @Override
    void makeHappy() {
        beAFriend();
        beACompanion();
        beALover();
        beABrother();
        beAFather();
        beAMaster();
        beAChef();
        beAnElectrician();
        beAPlumber();
        beAMechanic();
        beACarpenter();
        beADecorator();
        beAStylist();
        beASexologist();
        beAGynecologist();
        beAPsychologist();
        beAPestExterminator();
        beAPsychiatrist();
        beAHealer();
        beAGoodListener();
        beClean();
        beSympathetic();
        beAthletic();
        beWarm();
        beAttentive();
        beGallant();
        beIntelligent();
        beFunny();
        beCreative();
        beTender();
        beStrong();
        beUnderstanding();
        beTolerant();
        bePrudent();
        beAmbitious();
        beCapable();
        beCourageous();
        beDetermined();
        beDependable();
        bePassionate();
        beOrganized();
        giveHerComplimentsRegulary();
        goShoppingWithHer();
        beHonest();
        notStressHer();
        notLookOtherGirls();
        giveHerLotsOfAttention();
        giveHerLotsOfTime();
        giveHerLotsOfSpace();
        neverForgetDates();
    }

    abstract void beAFriend();
    abstract void beACompanion();
    abstract void beALover();
    abstract void beABrother();
    abstract void beAFather();
    abstract void beAMaster();
    abstract void beAChef();
    abstract void beAnElectrician();
    abstract void beAPlumber();
    abstract void beAMechanic();
    abstract void beACarpenter();
    abstract void beADecorator();
    abstract void beAStylist();
    abstract void beASexologist();
    abstract void beAGynecologist();
    abstract void beAPsychologist();
    abstract void beAPestExterminator();
    abstract void beAPsychiatrist();
    abstract void beAHealer();
    abstract void beAGoodListener();
    abstract void beClean();
    abstract void beSympathetic();
    abstract void beAthletic();
    abstract void beWarm();
    abstract void beAttentive();
    abstract void beGallant();
    abstract void beIntelligent();
    abstract void beFunny();
    abstract void beCreative();
    abstract void beTender();
    abstract void beStrong();
    abstract void beUnderstanding();
    abstract void beTolerant();
    abstract void bePrudent();
    abstract void beAmbitious();
    abstract void beCapable();
    abstract void beCourageous();
    abstract void beDetermined();
    abstract void beDependable();
    abstract void bePassionate();
    abstract void beOrganized();
    abstract void giveHerComplimentsRegulary();
    abstract void goShoppingWithHer();
    abstract void beHonest();
    abstract void notStressHer();
    abstract void notLookOtherGirls();
    abstract void giveHerLotsOfAttention();
    abstract void giveHerLotsOfTime();
    abstract void giveHerLotsOfSpace();
    abstract void neverForgetDates();
}
